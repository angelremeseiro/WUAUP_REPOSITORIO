//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CYMIMASA
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class BBDDCYMIMASA : DbContext
    {
        public BBDDCYMIMASA()
            : base("name=BBDDCYMIMASA")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<MAccidActosInseguros> MAccidActosInseguros { get; set; }
        public DbSet<MAccidClasificacionAccidente> MAccidClasificacionAccidente { get; set; }
        public DbSet<MAccidCondicionesInseguras> MAccidCondicionesInseguras { get; set; }
        public DbSet<MAccidConsecuencias> MAccidConsecuencias { get; set; }
        public DbSet<MAccidEvaluarRiesgo> MAccidEvaluarRiesgo { get; set; }
        public DbSet<MAccidFormaSuceso> MAccidFormaSuceso { get; set; }
        public DbSet<MAccidHora> MAccidHora { get; set; }
        public DbSet<MAccidLugarTrabajo> MAccidLugarTrabajo { get; set; }
        public DbSet<MAccidParteLesionada> MAccidParteLesionada { get; set; }
        public DbSet<MAccidTipoAccion> MAccidTipoAccion { get; set; }
        public DbSet<MAccidTipoGrafico> MAccidTipoGrafico { get; set; }
        public DbSet<MAccidTipoLesion> MAccidTipoLesion { get; set; }
        public DbSet<MAccidTipoRiesgo> MAccidTipoRiesgo { get; set; }
        public DbSet<MCentrosOperativos> MCentrosOperativos { get; set; }
        public DbSet<MDelegacion> MDelegacion { get; set; }
        public DbSet<MDiasSemana> MDiasSemana { get; set; }
        public DbSet<MDivision> MDivision { get; set; }
        public DbSet<MEmpresas> MEmpresas { get; set; }
        public DbSet<MEtiquetas> MEtiquetas { get; set; }
        public DbSet<MPaises> MPaises { get; set; }
        public DbSet<MPersonal> MPersonal { get; set; }
        public DbSet<MPersonalCategoria> MPersonalCategoria { get; set; }
        public DbSet<MSiNo> MSiNo { get; set; }
        public DbSet<sysdiagrams> sysdiagrams { get; set; }
        public DbSet<TAccidentes> TAccidentes { get; set; }
    
        public virtual ObjectResult<AccidentesGetXBO_Result> AccidentesGetXBO(string iDBO, string idioma)
        {
            var iDBOParameter = iDBO != null ?
                new ObjectParameter("IDBO", iDBO) :
                new ObjectParameter("IDBO", typeof(string));
    
            var idiomaParameter = idioma != null ?
                new ObjectParameter("Idioma", idioma) :
                new ObjectParameter("Idioma", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AccidentesGetXBO_Result>("AccidentesGetXBO", iDBOParameter, idiomaParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<PersonalGETxNIF_Result> PersonalGETxNIF(string nIF, string idioma)
        {
            var nIFParameter = nIF != null ?
                new ObjectParameter("NIF", nIF) :
                new ObjectParameter("NIF", typeof(string));
    
            var idiomaParameter = idioma != null ?
                new ObjectParameter("Idioma", idioma) :
                new ObjectParameter("Idioma", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PersonalGETxNIF_Result>("PersonalGETxNIF", nIFParameter, idiomaParameter);
        }
    
        public virtual int AccidentesCrear(string bO, Nullable<System.DateTime> fechaRegistro, Nullable<int> subcontratista, string nombreSubcontrata, string nIFTrabajador, string apellidos, string nombre, string categoria, string puestoTrabajo, string trabajoRealizaba, string experienciaPuesto, Nullable<int> antiguedad, string mandoSuperior, Nullable<System.DateTime> fechaAccidente, Nullable<int> hora, Nullable<int> diaSemana, Nullable<int> trabajoHabitual, Nullable<int> clasificacion, Nullable<System.DateTime> fechaBaja, Nullable<System.DateTime> fechaAlta, Nullable<int> jornadasPerdidas, Nullable<int> lugardeTrabajo, string otroLugarTrabajo, Nullable<int> consecuencias, Nullable<int> edad, string descripcion, string parteLesionada, string tipoLesion, string actosInseguros, string condicionesInseguras, string formaSuceso, string tipoRiesgo, Nullable<int> identificadoRiesgoEvaluacion, Nullable<int> evaluarRiesgos, Nullable<int> formadoInformadoRiesgo, Nullable<int> equiposProteccionDefinidosActividad, Nullable<int> seevacuoelaccidentadorapidaycorrectamente, Nullable<int> atendidoAmbulanciaServiciosdeUrgencia, Nullable<int> consecuenciaRiesgoElectricoAltura, Nullable<int> existeProcedimientoTrabajoActividad, string equipoInvestigacion1Apellidos, string equipoInvestigacion1Nombre, string equipoInvestigacion1PuestoTrabajo, string equipoInvestigacion2Apellidos, string equipoInvestigacion2Nombre, string equipoInvestigacion2PuestoTrabajo, string equipoInvestigacion3Apellidos, string equipoInvestigacion3Nombre, string equipoInvestigacion3PuestoTrabajo, string usuarioCreador, string usuarioModificador1, Nullable<System.DateTime> fecha)
        {
            var bOParameter = bO != null ?
                new ObjectParameter("BO", bO) :
                new ObjectParameter("BO", typeof(string));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("FechaRegistro", fechaRegistro) :
                new ObjectParameter("FechaRegistro", typeof(System.DateTime));
    
            var subcontratistaParameter = subcontratista.HasValue ?
                new ObjectParameter("Subcontratista", subcontratista) :
                new ObjectParameter("Subcontratista", typeof(int));
    
            var nombreSubcontrataParameter = nombreSubcontrata != null ?
                new ObjectParameter("NombreSubcontrata", nombreSubcontrata) :
                new ObjectParameter("NombreSubcontrata", typeof(string));
    
            var nIFTrabajadorParameter = nIFTrabajador != null ?
                new ObjectParameter("NIFTrabajador", nIFTrabajador) :
                new ObjectParameter("NIFTrabajador", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var categoriaParameter = categoria != null ?
                new ObjectParameter("Categoria", categoria) :
                new ObjectParameter("Categoria", typeof(string));
    
            var puestoTrabajoParameter = puestoTrabajo != null ?
                new ObjectParameter("PuestoTrabajo", puestoTrabajo) :
                new ObjectParameter("PuestoTrabajo", typeof(string));
    
            var trabajoRealizabaParameter = trabajoRealizaba != null ?
                new ObjectParameter("TrabajoRealizaba", trabajoRealizaba) :
                new ObjectParameter("TrabajoRealizaba", typeof(string));
    
            var experienciaPuestoParameter = experienciaPuesto != null ?
                new ObjectParameter("ExperienciaPuesto", experienciaPuesto) :
                new ObjectParameter("ExperienciaPuesto", typeof(string));
    
            var antiguedadParameter = antiguedad.HasValue ?
                new ObjectParameter("Antiguedad", antiguedad) :
                new ObjectParameter("Antiguedad", typeof(int));
    
            var mandoSuperiorParameter = mandoSuperior != null ?
                new ObjectParameter("MandoSuperior", mandoSuperior) :
                new ObjectParameter("MandoSuperior", typeof(string));
    
            var fechaAccidenteParameter = fechaAccidente.HasValue ?
                new ObjectParameter("FechaAccidente", fechaAccidente) :
                new ObjectParameter("FechaAccidente", typeof(System.DateTime));
    
            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(int));
    
            var diaSemanaParameter = diaSemana.HasValue ?
                new ObjectParameter("DiaSemana", diaSemana) :
                new ObjectParameter("DiaSemana", typeof(int));
    
            var trabajoHabitualParameter = trabajoHabitual.HasValue ?
                new ObjectParameter("TrabajoHabitual", trabajoHabitual) :
                new ObjectParameter("TrabajoHabitual", typeof(int));
    
            var clasificacionParameter = clasificacion.HasValue ?
                new ObjectParameter("Clasificacion", clasificacion) :
                new ObjectParameter("Clasificacion", typeof(int));
    
            var fechaBajaParameter = fechaBaja.HasValue ?
                new ObjectParameter("FechaBaja", fechaBaja) :
                new ObjectParameter("FechaBaja", typeof(System.DateTime));
    
            var fechaAltaParameter = fechaAlta.HasValue ?
                new ObjectParameter("FechaAlta", fechaAlta) :
                new ObjectParameter("FechaAlta", typeof(System.DateTime));
    
            var jornadasPerdidasParameter = jornadasPerdidas.HasValue ?
                new ObjectParameter("JornadasPerdidas", jornadasPerdidas) :
                new ObjectParameter("JornadasPerdidas", typeof(int));
    
            var lugardeTrabajoParameter = lugardeTrabajo.HasValue ?
                new ObjectParameter("LugardeTrabajo", lugardeTrabajo) :
                new ObjectParameter("LugardeTrabajo", typeof(int));
    
            var otroLugarTrabajoParameter = otroLugarTrabajo != null ?
                new ObjectParameter("OtroLugarTrabajo", otroLugarTrabajo) :
                new ObjectParameter("OtroLugarTrabajo", typeof(string));
    
            var consecuenciasParameter = consecuencias.HasValue ?
                new ObjectParameter("Consecuencias", consecuencias) :
                new ObjectParameter("Consecuencias", typeof(int));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var parteLesionadaParameter = parteLesionada != null ?
                new ObjectParameter("ParteLesionada", parteLesionada) :
                new ObjectParameter("ParteLesionada", typeof(string));
    
            var tipoLesionParameter = tipoLesion != null ?
                new ObjectParameter("TipoLesion", tipoLesion) :
                new ObjectParameter("TipoLesion", typeof(string));
    
            var actosInsegurosParameter = actosInseguros != null ?
                new ObjectParameter("ActosInseguros", actosInseguros) :
                new ObjectParameter("ActosInseguros", typeof(string));
    
            var condicionesInsegurasParameter = condicionesInseguras != null ?
                new ObjectParameter("CondicionesInseguras", condicionesInseguras) :
                new ObjectParameter("CondicionesInseguras", typeof(string));
    
            var formaSucesoParameter = formaSuceso != null ?
                new ObjectParameter("FormaSuceso", formaSuceso) :
                new ObjectParameter("FormaSuceso", typeof(string));
    
            var tipoRiesgoParameter = tipoRiesgo != null ?
                new ObjectParameter("TipoRiesgo", tipoRiesgo) :
                new ObjectParameter("TipoRiesgo", typeof(string));
    
            var identificadoRiesgoEvaluacionParameter = identificadoRiesgoEvaluacion.HasValue ?
                new ObjectParameter("IdentificadoRiesgoEvaluacion", identificadoRiesgoEvaluacion) :
                new ObjectParameter("IdentificadoRiesgoEvaluacion", typeof(int));
    
            var evaluarRiesgosParameter = evaluarRiesgos.HasValue ?
                new ObjectParameter("EvaluarRiesgos", evaluarRiesgos) :
                new ObjectParameter("EvaluarRiesgos", typeof(int));
    
            var formadoInformadoRiesgoParameter = formadoInformadoRiesgo.HasValue ?
                new ObjectParameter("FormadoInformadoRiesgo", formadoInformadoRiesgo) :
                new ObjectParameter("FormadoInformadoRiesgo", typeof(int));
    
            var equiposProteccionDefinidosActividadParameter = equiposProteccionDefinidosActividad.HasValue ?
                new ObjectParameter("EquiposProteccionDefinidosActividad", equiposProteccionDefinidosActividad) :
                new ObjectParameter("EquiposProteccionDefinidosActividad", typeof(int));
    
            var seevacuoelaccidentadorapidaycorrectamenteParameter = seevacuoelaccidentadorapidaycorrectamente.HasValue ?
                new ObjectParameter("Seevacuoelaccidentadorapidaycorrectamente", seevacuoelaccidentadorapidaycorrectamente) :
                new ObjectParameter("Seevacuoelaccidentadorapidaycorrectamente", typeof(int));
    
            var atendidoAmbulanciaServiciosdeUrgenciaParameter = atendidoAmbulanciaServiciosdeUrgencia.HasValue ?
                new ObjectParameter("AtendidoAmbulanciaServiciosdeUrgencia", atendidoAmbulanciaServiciosdeUrgencia) :
                new ObjectParameter("AtendidoAmbulanciaServiciosdeUrgencia", typeof(int));
    
            var consecuenciaRiesgoElectricoAlturaParameter = consecuenciaRiesgoElectricoAltura.HasValue ?
                new ObjectParameter("ConsecuenciaRiesgoElectricoAltura", consecuenciaRiesgoElectricoAltura) :
                new ObjectParameter("ConsecuenciaRiesgoElectricoAltura", typeof(int));
    
            var existeProcedimientoTrabajoActividadParameter = existeProcedimientoTrabajoActividad.HasValue ?
                new ObjectParameter("ExisteProcedimientoTrabajoActividad", existeProcedimientoTrabajoActividad) :
                new ObjectParameter("ExisteProcedimientoTrabajoActividad", typeof(int));
    
            var equipoInvestigacion1ApellidosParameter = equipoInvestigacion1Apellidos != null ?
                new ObjectParameter("EquipoInvestigacion1Apellidos", equipoInvestigacion1Apellidos) :
                new ObjectParameter("EquipoInvestigacion1Apellidos", typeof(string));
    
            var equipoInvestigacion1NombreParameter = equipoInvestigacion1Nombre != null ?
                new ObjectParameter("EquipoInvestigacion1Nombre", equipoInvestigacion1Nombre) :
                new ObjectParameter("EquipoInvestigacion1Nombre", typeof(string));
    
            var equipoInvestigacion1PuestoTrabajoParameter = equipoInvestigacion1PuestoTrabajo != null ?
                new ObjectParameter("EquipoInvestigacion1PuestoTrabajo", equipoInvestigacion1PuestoTrabajo) :
                new ObjectParameter("EquipoInvestigacion1PuestoTrabajo", typeof(string));
    
            var equipoInvestigacion2ApellidosParameter = equipoInvestigacion2Apellidos != null ?
                new ObjectParameter("EquipoInvestigacion2Apellidos", equipoInvestigacion2Apellidos) :
                new ObjectParameter("EquipoInvestigacion2Apellidos", typeof(string));
    
            var equipoInvestigacion2NombreParameter = equipoInvestigacion2Nombre != null ?
                new ObjectParameter("EquipoInvestigacion2Nombre", equipoInvestigacion2Nombre) :
                new ObjectParameter("EquipoInvestigacion2Nombre", typeof(string));
    
            var equipoInvestigacion2PuestoTrabajoParameter = equipoInvestigacion2PuestoTrabajo != null ?
                new ObjectParameter("EquipoInvestigacion2PuestoTrabajo", equipoInvestigacion2PuestoTrabajo) :
                new ObjectParameter("EquipoInvestigacion2PuestoTrabajo", typeof(string));
    
            var equipoInvestigacion3ApellidosParameter = equipoInvestigacion3Apellidos != null ?
                new ObjectParameter("EquipoInvestigacion3Apellidos", equipoInvestigacion3Apellidos) :
                new ObjectParameter("EquipoInvestigacion3Apellidos", typeof(string));
    
            var equipoInvestigacion3NombreParameter = equipoInvestigacion3Nombre != null ?
                new ObjectParameter("EquipoInvestigacion3Nombre", equipoInvestigacion3Nombre) :
                new ObjectParameter("EquipoInvestigacion3Nombre", typeof(string));
    
            var equipoInvestigacion3PuestoTrabajoParameter = equipoInvestigacion3PuestoTrabajo != null ?
                new ObjectParameter("EquipoInvestigacion3PuestoTrabajo", equipoInvestigacion3PuestoTrabajo) :
                new ObjectParameter("EquipoInvestigacion3PuestoTrabajo", typeof(string));
    
            var usuarioCreadorParameter = usuarioCreador != null ?
                new ObjectParameter("UsuarioCreador", usuarioCreador) :
                new ObjectParameter("UsuarioCreador", typeof(string));
    
            var usuarioModificador1Parameter = usuarioModificador1 != null ?
                new ObjectParameter("UsuarioModificador1", usuarioModificador1) :
                new ObjectParameter("UsuarioModificador1", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AccidentesCrear", bOParameter, fechaRegistroParameter, subcontratistaParameter, nombreSubcontrataParameter, nIFTrabajadorParameter, apellidosParameter, nombreParameter, categoriaParameter, puestoTrabajoParameter, trabajoRealizabaParameter, experienciaPuestoParameter, antiguedadParameter, mandoSuperiorParameter, fechaAccidenteParameter, horaParameter, diaSemanaParameter, trabajoHabitualParameter, clasificacionParameter, fechaBajaParameter, fechaAltaParameter, jornadasPerdidasParameter, lugardeTrabajoParameter, otroLugarTrabajoParameter, consecuenciasParameter, edadParameter, descripcionParameter, parteLesionadaParameter, tipoLesionParameter, actosInsegurosParameter, condicionesInsegurasParameter, formaSucesoParameter, tipoRiesgoParameter, identificadoRiesgoEvaluacionParameter, evaluarRiesgosParameter, formadoInformadoRiesgoParameter, equiposProteccionDefinidosActividadParameter, seevacuoelaccidentadorapidaycorrectamenteParameter, atendidoAmbulanciaServiciosdeUrgenciaParameter, consecuenciaRiesgoElectricoAlturaParameter, existeProcedimientoTrabajoActividadParameter, equipoInvestigacion1ApellidosParameter, equipoInvestigacion1NombreParameter, equipoInvestigacion1PuestoTrabajoParameter, equipoInvestigacion2ApellidosParameter, equipoInvestigacion2NombreParameter, equipoInvestigacion2PuestoTrabajoParameter, equipoInvestigacion3ApellidosParameter, equipoInvestigacion3NombreParameter, equipoInvestigacion3PuestoTrabajoParameter, usuarioCreadorParameter, usuarioModificador1Parameter, fechaParameter);
        }
    
        public virtual int AccidentesModificar(Nullable<int> codigo, string bO, Nullable<System.DateTime> fechaRegistro, Nullable<int> subcontratista, string nombreSubcontrata, string nIFTrabajador, string apellidos, string nombre, string categoria, string puestoTrabajo, string trabajoRealizaba, string experienciaPuesto, Nullable<int> antiguedad, string mandoSuperior, Nullable<System.DateTime> fechaAccidente, Nullable<int> hora, Nullable<int> diaSemana, Nullable<int> trabajoHabitual, Nullable<int> clasificacion, Nullable<System.DateTime> fechaBaja, Nullable<System.DateTime> fechaAlta, Nullable<int> jornadasPerdidas, Nullable<int> lugardeTrabajo, string otroLugarTrabajo, Nullable<int> consecuencias, Nullable<int> edad, string descripcion, string parteLesionada, string tipoLesion, string actosInseguros, string condicionesInseguras, string formaSuceso, string tipoRiesgo, Nullable<int> identificadoRiesgoEvaluacion, Nullable<int> evaluarRiesgos, Nullable<int> formadoInformadoRiesgo, Nullable<int> equiposProteccionDefinidosActividad, Nullable<int> seevacuoelaccidentadorapidaycorrectamente, Nullable<int> atendidoAmbulanciaServiciosdeUrgencia, Nullable<int> consecuenciaRiesgoElectricoAltura, Nullable<int> existeProcedimientoTrabajoActividad, string equipoInvestigacion1Apellidos, string equipoInvestigacion1Nombre, string equipoInvestigacion1PuestoTrabajo, string equipoInvestigacion2Apellidos, string equipoInvestigacion2Nombre, string equipoInvestigacion2PuestoTrabajo, string equipoInvestigacion3Apellidos, string equipoInvestigacion3Nombre, string equipoInvestigacion3PuestoTrabajo, string usuarioCreador, string usuarioModificador1, Nullable<System.DateTime> fecha)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(int));
    
            var bOParameter = bO != null ?
                new ObjectParameter("BO", bO) :
                new ObjectParameter("BO", typeof(string));
    
            var fechaRegistroParameter = fechaRegistro.HasValue ?
                new ObjectParameter("FechaRegistro", fechaRegistro) :
                new ObjectParameter("FechaRegistro", typeof(System.DateTime));
    
            var subcontratistaParameter = subcontratista.HasValue ?
                new ObjectParameter("Subcontratista", subcontratista) :
                new ObjectParameter("Subcontratista", typeof(int));
    
            var nombreSubcontrataParameter = nombreSubcontrata != null ?
                new ObjectParameter("NombreSubcontrata", nombreSubcontrata) :
                new ObjectParameter("NombreSubcontrata", typeof(string));
    
            var nIFTrabajadorParameter = nIFTrabajador != null ?
                new ObjectParameter("NIFTrabajador", nIFTrabajador) :
                new ObjectParameter("NIFTrabajador", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var categoriaParameter = categoria != null ?
                new ObjectParameter("Categoria", categoria) :
                new ObjectParameter("Categoria", typeof(string));
    
            var puestoTrabajoParameter = puestoTrabajo != null ?
                new ObjectParameter("PuestoTrabajo", puestoTrabajo) :
                new ObjectParameter("PuestoTrabajo", typeof(string));
    
            var trabajoRealizabaParameter = trabajoRealizaba != null ?
                new ObjectParameter("TrabajoRealizaba", trabajoRealizaba) :
                new ObjectParameter("TrabajoRealizaba", typeof(string));
    
            var experienciaPuestoParameter = experienciaPuesto != null ?
                new ObjectParameter("ExperienciaPuesto", experienciaPuesto) :
                new ObjectParameter("ExperienciaPuesto", typeof(string));
    
            var antiguedadParameter = antiguedad.HasValue ?
                new ObjectParameter("Antiguedad", antiguedad) :
                new ObjectParameter("Antiguedad", typeof(int));
    
            var mandoSuperiorParameter = mandoSuperior != null ?
                new ObjectParameter("MandoSuperior", mandoSuperior) :
                new ObjectParameter("MandoSuperior", typeof(string));
    
            var fechaAccidenteParameter = fechaAccidente.HasValue ?
                new ObjectParameter("FechaAccidente", fechaAccidente) :
                new ObjectParameter("FechaAccidente", typeof(System.DateTime));
    
            var horaParameter = hora.HasValue ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(int));
    
            var diaSemanaParameter = diaSemana.HasValue ?
                new ObjectParameter("DiaSemana", diaSemana) :
                new ObjectParameter("DiaSemana", typeof(int));
    
            var trabajoHabitualParameter = trabajoHabitual.HasValue ?
                new ObjectParameter("TrabajoHabitual", trabajoHabitual) :
                new ObjectParameter("TrabajoHabitual", typeof(int));
    
            var clasificacionParameter = clasificacion.HasValue ?
                new ObjectParameter("Clasificacion", clasificacion) :
                new ObjectParameter("Clasificacion", typeof(int));
    
            var fechaBajaParameter = fechaBaja.HasValue ?
                new ObjectParameter("FechaBaja", fechaBaja) :
                new ObjectParameter("FechaBaja", typeof(System.DateTime));
    
            var fechaAltaParameter = fechaAlta.HasValue ?
                new ObjectParameter("FechaAlta", fechaAlta) :
                new ObjectParameter("FechaAlta", typeof(System.DateTime));
    
            var jornadasPerdidasParameter = jornadasPerdidas.HasValue ?
                new ObjectParameter("JornadasPerdidas", jornadasPerdidas) :
                new ObjectParameter("JornadasPerdidas", typeof(int));
    
            var lugardeTrabajoParameter = lugardeTrabajo.HasValue ?
                new ObjectParameter("LugardeTrabajo", lugardeTrabajo) :
                new ObjectParameter("LugardeTrabajo", typeof(int));
    
            var otroLugarTrabajoParameter = otroLugarTrabajo != null ?
                new ObjectParameter("OtroLugarTrabajo", otroLugarTrabajo) :
                new ObjectParameter("OtroLugarTrabajo", typeof(string));
    
            var consecuenciasParameter = consecuencias.HasValue ?
                new ObjectParameter("Consecuencias", consecuencias) :
                new ObjectParameter("Consecuencias", typeof(int));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var parteLesionadaParameter = parteLesionada != null ?
                new ObjectParameter("ParteLesionada", parteLesionada) :
                new ObjectParameter("ParteLesionada", typeof(string));
    
            var tipoLesionParameter = tipoLesion != null ?
                new ObjectParameter("TipoLesion", tipoLesion) :
                new ObjectParameter("TipoLesion", typeof(string));
    
            var actosInsegurosParameter = actosInseguros != null ?
                new ObjectParameter("ActosInseguros", actosInseguros) :
                new ObjectParameter("ActosInseguros", typeof(string));
    
            var condicionesInsegurasParameter = condicionesInseguras != null ?
                new ObjectParameter("CondicionesInseguras", condicionesInseguras) :
                new ObjectParameter("CondicionesInseguras", typeof(string));
    
            var formaSucesoParameter = formaSuceso != null ?
                new ObjectParameter("FormaSuceso", formaSuceso) :
                new ObjectParameter("FormaSuceso", typeof(string));
    
            var tipoRiesgoParameter = tipoRiesgo != null ?
                new ObjectParameter("TipoRiesgo", tipoRiesgo) :
                new ObjectParameter("TipoRiesgo", typeof(string));
    
            var identificadoRiesgoEvaluacionParameter = identificadoRiesgoEvaluacion.HasValue ?
                new ObjectParameter("IdentificadoRiesgoEvaluacion", identificadoRiesgoEvaluacion) :
                new ObjectParameter("IdentificadoRiesgoEvaluacion", typeof(int));
    
            var evaluarRiesgosParameter = evaluarRiesgos.HasValue ?
                new ObjectParameter("EvaluarRiesgos", evaluarRiesgos) :
                new ObjectParameter("EvaluarRiesgos", typeof(int));
    
            var formadoInformadoRiesgoParameter = formadoInformadoRiesgo.HasValue ?
                new ObjectParameter("FormadoInformadoRiesgo", formadoInformadoRiesgo) :
                new ObjectParameter("FormadoInformadoRiesgo", typeof(int));
    
            var equiposProteccionDefinidosActividadParameter = equiposProteccionDefinidosActividad.HasValue ?
                new ObjectParameter("EquiposProteccionDefinidosActividad", equiposProteccionDefinidosActividad) :
                new ObjectParameter("EquiposProteccionDefinidosActividad", typeof(int));
    
            var seevacuoelaccidentadorapidaycorrectamenteParameter = seevacuoelaccidentadorapidaycorrectamente.HasValue ?
                new ObjectParameter("Seevacuoelaccidentadorapidaycorrectamente", seevacuoelaccidentadorapidaycorrectamente) :
                new ObjectParameter("Seevacuoelaccidentadorapidaycorrectamente", typeof(int));
    
            var atendidoAmbulanciaServiciosdeUrgenciaParameter = atendidoAmbulanciaServiciosdeUrgencia.HasValue ?
                new ObjectParameter("AtendidoAmbulanciaServiciosdeUrgencia", atendidoAmbulanciaServiciosdeUrgencia) :
                new ObjectParameter("AtendidoAmbulanciaServiciosdeUrgencia", typeof(int));
    
            var consecuenciaRiesgoElectricoAlturaParameter = consecuenciaRiesgoElectricoAltura.HasValue ?
                new ObjectParameter("ConsecuenciaRiesgoElectricoAltura", consecuenciaRiesgoElectricoAltura) :
                new ObjectParameter("ConsecuenciaRiesgoElectricoAltura", typeof(int));
    
            var existeProcedimientoTrabajoActividadParameter = existeProcedimientoTrabajoActividad.HasValue ?
                new ObjectParameter("ExisteProcedimientoTrabajoActividad", existeProcedimientoTrabajoActividad) :
                new ObjectParameter("ExisteProcedimientoTrabajoActividad", typeof(int));
    
            var equipoInvestigacion1ApellidosParameter = equipoInvestigacion1Apellidos != null ?
                new ObjectParameter("EquipoInvestigacion1Apellidos", equipoInvestigacion1Apellidos) :
                new ObjectParameter("EquipoInvestigacion1Apellidos", typeof(string));
    
            var equipoInvestigacion1NombreParameter = equipoInvestigacion1Nombre != null ?
                new ObjectParameter("EquipoInvestigacion1Nombre", equipoInvestigacion1Nombre) :
                new ObjectParameter("EquipoInvestigacion1Nombre", typeof(string));
    
            var equipoInvestigacion1PuestoTrabajoParameter = equipoInvestigacion1PuestoTrabajo != null ?
                new ObjectParameter("EquipoInvestigacion1PuestoTrabajo", equipoInvestigacion1PuestoTrabajo) :
                new ObjectParameter("EquipoInvestigacion1PuestoTrabajo", typeof(string));
    
            var equipoInvestigacion2ApellidosParameter = equipoInvestigacion2Apellidos != null ?
                new ObjectParameter("EquipoInvestigacion2Apellidos", equipoInvestigacion2Apellidos) :
                new ObjectParameter("EquipoInvestigacion2Apellidos", typeof(string));
    
            var equipoInvestigacion2NombreParameter = equipoInvestigacion2Nombre != null ?
                new ObjectParameter("EquipoInvestigacion2Nombre", equipoInvestigacion2Nombre) :
                new ObjectParameter("EquipoInvestigacion2Nombre", typeof(string));
    
            var equipoInvestigacion2PuestoTrabajoParameter = equipoInvestigacion2PuestoTrabajo != null ?
                new ObjectParameter("EquipoInvestigacion2PuestoTrabajo", equipoInvestigacion2PuestoTrabajo) :
                new ObjectParameter("EquipoInvestigacion2PuestoTrabajo", typeof(string));
    
            var equipoInvestigacion3ApellidosParameter = equipoInvestigacion3Apellidos != null ?
                new ObjectParameter("EquipoInvestigacion3Apellidos", equipoInvestigacion3Apellidos) :
                new ObjectParameter("EquipoInvestigacion3Apellidos", typeof(string));
    
            var equipoInvestigacion3NombreParameter = equipoInvestigacion3Nombre != null ?
                new ObjectParameter("EquipoInvestigacion3Nombre", equipoInvestigacion3Nombre) :
                new ObjectParameter("EquipoInvestigacion3Nombre", typeof(string));
    
            var equipoInvestigacion3PuestoTrabajoParameter = equipoInvestigacion3PuestoTrabajo != null ?
                new ObjectParameter("EquipoInvestigacion3PuestoTrabajo", equipoInvestigacion3PuestoTrabajo) :
                new ObjectParameter("EquipoInvestigacion3PuestoTrabajo", typeof(string));
    
            var usuarioCreadorParameter = usuarioCreador != null ?
                new ObjectParameter("UsuarioCreador", usuarioCreador) :
                new ObjectParameter("UsuarioCreador", typeof(string));
    
            var usuarioModificador1Parameter = usuarioModificador1 != null ?
                new ObjectParameter("UsuarioModificador1", usuarioModificador1) :
                new ObjectParameter("UsuarioModificador1", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AccidentesModificar", codigoParameter, bOParameter, fechaRegistroParameter, subcontratistaParameter, nombreSubcontrataParameter, nIFTrabajadorParameter, apellidosParameter, nombreParameter, categoriaParameter, puestoTrabajoParameter, trabajoRealizabaParameter, experienciaPuestoParameter, antiguedadParameter, mandoSuperiorParameter, fechaAccidenteParameter, horaParameter, diaSemanaParameter, trabajoHabitualParameter, clasificacionParameter, fechaBajaParameter, fechaAltaParameter, jornadasPerdidasParameter, lugardeTrabajoParameter, otroLugarTrabajoParameter, consecuenciasParameter, edadParameter, descripcionParameter, parteLesionadaParameter, tipoLesionParameter, actosInsegurosParameter, condicionesInsegurasParameter, formaSucesoParameter, tipoRiesgoParameter, identificadoRiesgoEvaluacionParameter, evaluarRiesgosParameter, formadoInformadoRiesgoParameter, equiposProteccionDefinidosActividadParameter, seevacuoelaccidentadorapidaycorrectamenteParameter, atendidoAmbulanciaServiciosdeUrgenciaParameter, consecuenciaRiesgoElectricoAlturaParameter, existeProcedimientoTrabajoActividadParameter, equipoInvestigacion1ApellidosParameter, equipoInvestigacion1NombreParameter, equipoInvestigacion1PuestoTrabajoParameter, equipoInvestigacion2ApellidosParameter, equipoInvestigacion2NombreParameter, equipoInvestigacion2PuestoTrabajoParameter, equipoInvestigacion3ApellidosParameter, equipoInvestigacion3NombreParameter, equipoInvestigacion3PuestoTrabajoParameter, usuarioCreadorParameter, usuarioModificador1Parameter, fechaParameter);
        }
    
        public virtual ObjectResult<AccidentesConsulta_Result> AccidentesConsulta(string idioma)
        {
            var idiomaParameter = idioma != null ?
                new ObjectParameter("Idioma", idioma) :
                new ObjectParameter("Idioma", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AccidentesConsulta_Result>("AccidentesConsulta", idiomaParameter);
        }
    
        public virtual ObjectResult<AccidentesLeer_Result> AccidentesLeer(Nullable<int> codigo)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AccidentesLeer_Result>("AccidentesLeer", codigoParameter);
        }
    }
}
